#!/bin/bash

# packthis
# - written by azman@my1matrix.net
# - to pack current working directory

THISPATH=`dirname $0`
THISPATH=`cd $THISPATH;pwd`
CURRPATH=`pwd`
WORKPATH=`dirname $CURRPATH`
HOMEPATH=$HOME
[ -d "$HOMEPATH/Slack" ] && HOMEPATH="$HOMEPATH/Slack"
BALLPATH=$HOMEPATH/temp
BALLNAME=`basename $CURRPATH`
MAINNAME=${MAINNAME:="$BALLNAME"}
NAMESUFX=${NAMESUFX:=""}
BALLSUFX=${BALLSUFX:=""}
DATE_FMT=${DATE_FMT:="+%Y%m%d"}
CHK_VERB=${CHK_VERB:="NO"}
NUM_COPY=${NUM_COPY:=0}
TAR_EXEC=${TAR_EXEC:="tar"}
TAR_OPTS=${TAR_OPTS:="czf"}
TAR_EXTN=${TAR_EXTN:=".tar.gz"}
ZIP_EXEC=${ZIP_EXEC:="zip"}
ZIP_OPTS=${ZIP_OPTS:="-rq"}
ZIP_EXTN=${ZIP_EXTN:=".zip"}
DO_GZ=${DO_GZ:="NO"}
DO_ZIP=${DO_ZIP:="NO"}
CHK_EXEC=
CHK_NAME=
CHK_COPY=
CHK_EXTN=
CHK_CONT=
CHK_DATE="DATE"

# if this is a git repo, use gitpack?
GIT_REQS=`echo $@ | grep -- "--no-gitpack"`
if [ -d "$CURRPATH/.git" -a "$GIT_REQS" == "" ]; then
	${THISPATH}/gitpack $@
	exit $?
fi

while [ "$1" != "" ]; do
	case $1 in
		--suffix|--name-suffix)
			shift
			NAMESUFX="-$1"
			;;
		--file-suffix)
			shift
			BALLSUFX="-$1"
			;;
		--name)
			shift
			[ "$1" == "" ] &&
				echo "No name given ? ['$1']?" && exit 1
			MAINNAME="$1"
			;;
		--parent-name)
			TESTNAME=$(basename $WORKPATH)
			[ "$TESTNAME" = "/" ] && TESTNAME="root"
			MAINNAME="${TESTNAME}-${BALLNAME}"
			;;
		--path)
			shift
			[ ! -d "$1" ] && echo "Path '$1' not found!"
			[ -d "$1" ] && BALLPATH=$(cd $1;pwd)
			;;
		--content)
			CHK_CONT="YES"
			;;
		--no-gitpack)
			# just to skip gitpack!
			;;
		--no-date)
			CHK_DATE=""
			;;
		--time)
			DATE_FMT="+%Y%m%d%H%M"
			;;
		--verbose|-v)
			CHK_VERB="YES"
			;;
		--zip)
			DO_ZIP="YES"
			;;
		--gz)
			DO_GZ="YES"
			;;
		* )
			echo "Unknown parameter ($1)!" && exit 1
			;;
	esac
	shift
done

# use xz when available AND gz not specifically requested
[ "$(which xz 2>/dev/null)" != "" -a "$DO_GZ" != "YES" ] &&
	TAR_OPTS=${TAR_OPTS//z/J} && TAR_EXTN=${TAR_EXTN//gz/xz}

[ "$CHK_VERB" == "YES" ] && TAR_OPTS="${TAR_OPTS}v"
[ "$CHK_VERB" == "YES" ] && ZIP_OPTS="${ZIP_OPTS//q/}"

[ ! -d $BALLPATH ] && mkdir -pv $BALLPATH

[ -L "$CURRPATH" ] && CURRPATH=$(pwd -P) && WORKPATH=$(dirname $CURRPATH)

if [ -d $WORKPATH ]; then
	cd $WORKPATH
	[ "$CHK_VERB" == "NO" ] && echo -n "Archiving ... "
	if [ "$DO_ZIP" == "YES" ]; then
		CHK_EXEC="${ZIP_EXEC} ${ZIP_OPTS}"
		CHK_EXTN=${ZIP_EXTN}
	else
		CHK_EXEC="${TAR_EXEC} ${TAR_OPTS}"
		CHK_EXTN=${TAR_EXTN}
	fi
	CHK_NAME=${MAINNAME}${NAMESUFX}
	CHK_COPY=${BALLSUFX}${CHK_EXTN}
	[ "$CHK_DATE" == "DATE" ] && CHK_DATE="-"`date ${DATE_FMT}`
	while [ -f ${BALLPATH}/${CHK_NAME}${CHK_DATE}${CHK_COPY} ]; do
		(( NUM_COPY=NUM_COPY+1 ))
		CHK_COPY="${BALLSUFX}_${NUM_COPY}${CHK_EXTN}"
	done
	CHK_EXTN=${CHK_COPY}
	CHK_NAME=${CHK_NAME}${CHK_DATE}${CHK_EXTN}
	if [ "${CHK_CONT}" == "YES" ] ; then
		cd $CURRPATH
		${CHK_EXEC} ${BALLPATH}/${CHK_NAME} .
	else
		${CHK_EXEC} ${BALLPATH}/${CHK_NAME} ${BALLNAME}
	fi
	[ "$CHK_VERB" == "NO" ] && echo "done."
fi
