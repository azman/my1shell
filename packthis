#!/bin/bash

# packthis
# - written by azman@my1matrix.net
# - to pack current working directory

CURRPATH=$(pwd)
WORKPATH=$(dirname $CURRPATH)
BALLPATH=$HOME/temp
BALLNAME=$(basename $CURRPATH)
BALLSUFX=${BALLSUFX:=""}
DATE_FMT=${DATE_FMT:="+%Y%m%d"}
CHECKGIT=${CHECKGIT:="YES"}
BUNDLGIT=${BUNDLGIT:="NO"}
PATCHGIT=${PATCHGIT:="NO"}
CHK_VERB=${CHK_VERB:="NO"}
NUM_COPY=${NUM_COPY:=0}
TAR_EXEC=${TAR_EXEC:="tar"}
TAR_OPTS=${TAR_OPTS:="cjf"}
TAR_EXTN=${TAR_EXTN:=".tar.bz2"}
TZR_OPTS=${TAR_OPTS:="czf"}
TZR_EXTN=${TAR_EXTN:=".tar.gz"}
ZIP_EXEC=${ZIP_EXEC:="zip"}
ZIP_OPTS=${ZIP_OPTS:="-rq"}
ZIP_EXTN=${ZIP_EXTN:=".zip"}
DO_ZIP=${DO_ZIP:="NO"}
DO_GZ=${DO_GZ:="NO"}
CHK_EXEC=
CHK_NAME=
CHK_COPY=
CHK_EXTN=

while [ "$1" != "" ]; do
	case $1 in
		--suffix)
			shift
			BALLSUFX="-$1"
			;;
		--time)
			DATE_FMT="+%Y%m%d%H%M"
			;;
		--ignore-git)
			CHECKGIT="NO"
			;;
		--bundle-git|--git)
			CHECKGIT="NO"
			BUNDLGIT="YES"
			PATCHGIT="NO"
			;;
		--git-diff)
			CHECKGIT="NO"
			BUNDLGIT="NO"
			PATCHGIT="YES"
			;;
		--verbose|-v)
			CHK_VERB="YES"
			;;
		--path)
			shift
			[ ! -d "$1" ] && echo "Path '$1' not found!"
			[ -d "$1" ] && BALLPATH=$(cd $1;pwd)
			;;
		--gz)
			DO_GZ="YES"
			;;
		--zip)
			DO_ZIP="YES"
			;;
		* )
			echo "Unknown parameter ($1)!" && exit 1
			;;
	esac
	shift
done

[ "$DO_GZ" == "YES" ] && TAR_OPTS=$TZR_OPTS && TAR_EXTN=$TZR_EXTN

[ "$CHK_VERB" == "YES" ] && TAR_OPTS="${TAR_OPTS}v"
[ "$CHK_VERB" == "YES" ] && ZIP_OPTS="${ZIP_OPTS//q/}"

[ "$CHECKGIT" == "YES" ] &&
	[ -d "$CURRPATH/.git" ] && BALLSUFX="${BALLSUFX}_git"

[ ! -d $BALLPATH ] && mkdir -pv $BALLPATH

if [ "$BUNDLGIT" == "YES" ]; then
	[ ! -d "$CURRPATH/.git" ] &&
		echo "Not a git repo! Cannot use 'git bundle'!" && exit 1
	CHK_BRANCH="$(git branch|grep "* ")"
	CHK_BRANCH="${CHK_BRANCH#* }"
	CHK_NAME=${BALLNAME}-$(date +%Y%m%d%H%M)_${CHK_BRANCH}.git
	git bundle create ${BALLPATH}/${CHK_NAME} ${CHK_BRANCH}
	[ $? -ne 0 ] && echo "Error running git?" && exit 1
	exit 0
fi

if [ "$PATCHGIT" == "YES" ]; then
	[ ! -d "$CURRPATH/.git" ] &&
		echo "Not a git repo! Cannot use 'git diff'!" && exit 1
	CHK_NAME=${BALLNAME}-$(date +%Y%m%d%H%M).patch
	git diff >${BALLPATH}/${CHK_NAME}
	[ $? -ne 0 ] && echo "Error running git?" && exit 1
	exit 0
fi

[ -L "$CURRPATH" ] && CURRPATH=$(pwd -P) && WORKPATH=$(dirname $CURRPATH)

if [ -d $WORKPATH ]; then
	cd $WORKPATH
	[ "$CHK_VERB" == "NO" ] && echo -n "Archiving ... "
	if [ "$DO_ZIP" == "YES" ]; then
		CHK_EXEC="${ZIP_EXEC} ${ZIP_OPTS}"
		CHK_NAME=${BALLNAME}
		CHK_EXTN=${ZIP_EXTN}
	else
		CHK_EXEC="${TAR_EXEC} ${TAR_OPTS}"
		CHK_NAME=${BALLNAME}
		CHK_EXTN=${TAR_EXTN}
	fi
	CHK_COPY=${BALLSUFX}${CHK_COPY}${CHK_EXTN}
	while [ -f ${BALLPATH}/${CHK_NAME}-$(date ${DATE_FMT})${CHK_COPY} ]; do
		(( NUM_COPY=NUM_COPY+1 ))
		CHK_COPY="${BALLSUFX}_${NUM_COPY}${CHK_EXTN}"
	done
	CHK_EXTN=${CHK_COPY}
	CHK_NAME=${CHK_NAME}-$(date ${DATE_FMT})${CHK_EXTN}
	${CHK_EXEC} ${BALLPATH}/${CHK_NAME} ${BALLNAME}
	[ "$CHK_VERB" == "NO" ] && echo "done."
fi
