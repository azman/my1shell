#!/bin/bash

CHK_EXEC=`basename $0`
CHK_PATH="/tmp/$CHK_EXEC"
[ ! -d "$CHK_PATH" ] && mkdir -p $CHK_PATH
CHK_STAT="$CHK_PATH/${CHK_EXEC}_STAT"
CHK_FILE="$CHK_PATH/${CHK_EXEC}_PID"
if [ -f "$CHK_FILE" ] ; then
	CHK_TEMP=`cat $CHK_FILE`
	CHK_TEMP=`ps -ef | grep $CHK_TEMP | grep $CHK_EXEC`
	if [ "$CHK_TEMP" != "" ] ; then
		echo "Running instance?! ($CHK_TEMP)" && exit 1
	fi
fi
echo $$ >$CHK_FILE
rm -f $CHK_STAT
CHK_TERM="xterm"

WIN_EXEC="gtkdialog"
WIN_TEST=`which $WIN_EXEC 2>/dev/null`
[ ! -x "$WIN_TEST" ] && echo "Cannot find $WIN_EXEC! Aborting!" && exit 1
MNT_EXEC="pmount"
MNT_TEST=`which $MNT_EXEC 2>/dev/null`
[ ! -x "$MNT_TEST" ] && echo "Cannot find $MNT_EXEC! Aborting!" && exit 1

find_part()
{
	# find current
	local list=`lsblk -n -l -o NAME,TYPE,FSTYPE,LABEL`
	list=`echo "$list" | grep -E "part|rom"`
	[ -z "$list" ] && return
	local part name what type dlbl that prev
	echo "$list" | while read -r part ; do
		part=`echo $part | sed 's|[[:space:]]#| |g'`
		name=`echo $part | cut -f1 -d' '`
		what=`echo $part | cut -f2 -d' '`
		type=`echo $part | cut -f3 -d' '`
		dlbl=`echo $part | cut -f4 -d' '`
		[ -z "$dlbl" ] && dlbl="$name"
		[ "$type" = "swap" ] && continue
		[ "$what" = "rom" -a "$type" = "" ] && continue
		[ ! -r "/dev/$name" ] && continue
		that="$name,$what,$type,$dlbl"
		[ -z "$prev" ] && prev=$that || prev=";$that"
		echo -n "$prev"
	done
}

is_mounted()
{
	local that=$1
	[ ! -r "/dev/$that" ] && return 2
	local what=`mount | grep $that`
	[ "$what" = "" ] && return 1 || return 0
}

build_part()
{
	local part=$1
	local name=`echo $part | cut -d',' -f1`
	local what=`echo $part | cut -d',' -f2`
	local type=`echo $part | cut -d',' -f3`
	local that=`echo $part | cut -d',' -f4`
	[ -z "$that" ] && that=$name
	local actl actd open
	if is_mounted $name ; then
		actl="Unmount"
		actd="pumount /dev/$name"
		open="true"
	else
		actl="Mount"
		actd="pmount /dev/$name"
		[ "$type" = "crypto_LUKS" ] && actd="$CHK_TERM -e $actd"
		open="false"
	fi
WIN_PROG="$WIN_PROG
    <hbox>
    <text><label>$that ($what) {$type}</label></text>
    <button xalign=\"0\" tooltip-text=\"/dev/$name\">
      <label>$actl</label>
      <action>$actd</action>
      <action type=\"exit\">next</action>
    </button>"
WIN_PROG="$WIN_PROG
    <button xalign=\"0\" tooltip-text=\"$that\">
      <label>Open</label>
      <action>rox /media/$name</action>
      <action type=\"exit\">next</action>
      <sensitive>$open</sensitive>
    </button>"
WIN_PROG="$WIN_PROG
    </hbox>"
}

# main loop
while true ; do

WIN_PROG="<window title=\"$CHK_EXEC\" icon-name=\"gtk-harddisk\">
  <frame Mountable Partition/Disk><vbox>"

LIST=`find_part`
while [ ! -z "$LIST" ] ; do
	PART=`echo $LIST | cut -d';' -f1`
	build_part $PART
	LIST=${LIST#*;}
	[ "$LIST" = "$PART" ] && break
done

WIN_PROG="$WIN_PROG
    <button>
      <label>Exit</label>
      <action type=\"exit\">done</action>
    </button>
  </vbox></frame>
</window>"
export WIN_PROG

$WIN_EXEC -c -p WIN_PROG >$CHK_STAT 2>&1
WIN_TEMP=`cat $CHK_STAT | grep EXIT`
eval "$WIN_TEMP"
[ "$EXIT" = "next" ] && continue || break

done

rm -f $CHK_FILE
