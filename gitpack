#!/bin/bash

# gitpack
# - written by azman@my1matrix.net
# - was a part of packthis script (maintain related options)
# - create git bundle (AND git patch if necessary)

CURRPATH=$(pwd)
WORKPATH=$(dirname $CURRPATH)
BALLPATH=$HOME/temp
BALLNAME=$(basename $CURRPATH)
MAINNAME=${MAINNAME:="$BALLNAME"}
BALLSUFX=${BALLSUFX:=""}
DOBUNDLE=${DOBUNDLE:="YES"}
DATE_FMT=${DATE_FMT:="+%Y%m%d"}
PATCHGIT=${PATCHGIT:="NO"}
PATCHNUM=${PATCHNUM:="4"}

#echo "[INFO] Running "`basename $0`

while [ "$1" != "" ]; do
	case $1 in
		--diff)
			DOBUNDLE="NO"
			;;
		--time)
			DATE_FMT="+%Y%m%d%H%M"
			;;
		--suffix)
			shift
			BALLSUFX="-$1"
			;;
		--name)
			shift
			[ "$1" == "" ] &&
				echo "No name given ['$1']?" && exit 1
			MAINNAME="$1"
			;;
		--path)
			shift
			[ ! -d "$1" ] && echo "Path '$1' not found!"
			[ -d "$1" ] && BALLPATH=$(cd $1;pwd)
			;;
		--format-patch)
			shift
			PATCHNUM="$1"
			PATCHGIT="YES"
			;;
		* )
			echo "Unknown parameter ($1)!" && exit 1
			;;
	esac
	shift
done

[ ! -d $BALLPATH ] && mkdir -pv $BALLPATH

GIT_BIN=`which git 2>/dev/null`
[ "$GIT_BIN" == "" ] &&
	echo "Cannot find git! Abort!" && exit 1

[ ! -d "$CURRPATH/.git" ] &&
	echo "Not a git repo! Abort!" && exit 1

# check if NOT on master branch
CHK_BRANCH="$(git branch|grep "* ")"
CHK_BRANCH="${CHK_BRANCH#* }"
[ "$CHK_BRANCH" != "master" ] &&
	BALLSUFX="${BALLSUFX}-${CHK_BRANCH}_active"

# prepare name
CHK_DATE=`date ${DATE_FMT}`
CHK_NAME=${MAINNAME}-${CHK_DATE}

# create git bundle
if [ "$DOBUNDLE" == "YES" ]; then
	git bundle create ${BALLPATH}/${CHK_NAME}${BALLSUFX}.git --branches --tags
	[ $? -ne 0 ] && echo "Error running git?" && exit 1
fi

# create diff - if we have one?
GIT_DIFF=`git diff`
if [ "$GIT_DIFF" != "" ]; then
	echo "$GIT_DIFF" >${BALLPATH}/${CHK_NAME}${BALLSUFX}.patch
	echo "Patch file '${BALLPATH}/${CHK_NAME}-${BALLSUFX}.patch' created."
fi

# are we formatting patches?
if [ "$PATCHGIT" == "YES" ]; then
	[ PATCHNUM=="" ] && PATCHNUM=1
	BALLSUFX="${BALLSUFX}_patches"
	rm -rf ${BALLPATH}/${CHK_NAME}
	git format-patch -o ${BALLPATH}/${CHK_NAME}${BALLSUFX} -${PATCHNUM}
	[ $? -ne 0 ] && echo "Error running git?" && exit 1
fi
