#!/bin/bash

# chkhub
# - written by azman@my1matrix.org
# - look up all repo on github belonging to a user account
# - clone if not already locally available

TOOL_NAME=`basename $0`
TOOL_PATH=`dirname $0`
CURR_PATH=`pwd`

THAT_NAME=curl
THAT_EXEC=$(which $THAT_NAME 2>/dev/null)
[ ! -x "$THAT_EXEC" ] &&
	echo "** Cannot find ${TOOL_NAME}!" && exit 1

# look for config file
for conf in "$CURR_PATH/.$TOOL_NAME" "$HOME/.$TOOL_NAME" ; do
	[ -f $conf ] &&  . $conf && break
done

USERNAME=${USERNAME:=""}
ORGSNAME=${ORGSNAME:=""}
LISTNAME=${LISTNAME:="/tmp/list.txt"}
MAIN_URL=${MAIN_URL:="git@github.com:"}
HTTP_URL=${HTTP_URL:="https://github.com/"}
DO_CLONE=""
DO_LOCAL=""
DO_COUNT="100"
DO_QUIET="YES"
DO_CHECK=0

while [ "$1" != "" ] ; do
	case $1 in
		--clone|--exec) DO_CLONE="YES" ;;
		--local) shift
			[ ! -f "$1" ] &&
				echo "Local list file '$1' not found! Aborting..." && exit 1
			LISTNAME=$1
			DO_LOCAL="YES"
			;;
		--list) shift ; LISTNAME=$1 ;;
		--count) shift ; DO_COUNT="$1" ;;
		--user) shift ; USERNAME="$1" ;;
		--orgs) shift ; ORGSNAME="$1" ;;
		--verbose) DO_QUIET="NO" ;;
		--https) MAIN_URL="$HTTP_URL" ;;
		*) echo "Unknown parameter ($1)!" && exit 1 ;;
	esac
	shift
done

if [ "$DO_LOCAL" != "YES" ] ; then
	[ "$USERNAME" == "" ] &&
		echo "Missing user info... abort!" && exit 1
	echo -n "" >$LISTNAME
	USRS_URL="https://api.github.com/users/$USERNAME/repos"
	ORGS_URL="https://api.github.com/orgs/$ORGSNAME/repos"
	if [ "$DO_COUNT" != "" ] ; then
		USRS_URL="${USRS_URL}?per_page=$DO_COUNT"
		ORGS_URL="${ORGS_URL}?per_page=$DO_COUNT"
	fi
	CHK_LIST=`$TOOL_EXEC -i $USRS_URL 2>/dev/null|grep full_name`
	echo "$CHK_LIST" | sed 's/^.*: \"\(.*\)\".*$/\1/' >>$LISTNAME
	if [ "$ORGSNAME" != "" ] ; then
		CHK_LIST=`$TOOL_EXEC -i $ORGS_URL 2>/dev/null|grep full_name`
		echo "$CHK_LIST" | sed 's/^.*: \"\(.*\)\".*$/\1/' >>$LISTNAME
	fi
	echo -n "Repository list saved "
else
	echo -n "Using repository list "
fi
REPO_CNT=`cat $LISTNAME | wc -l`
echo "in '$LISTNAME' ($REPO_CNT)."

for a in `cat $LISTNAME` ; do
	b=${a#*/}
	if [ -d "$b" ] ; then
		[ "$DO_QUIET" = "NO" ] && echo "Repo '$b' => found."
		continue
	fi
	[ "$DO_CLONE" != "YES" ] &&
		echo "Repo '$b' => no local copy." && DO_CHECK=1 && continue
	echo "Cloning '$b'... "
	git clone ${MAIN_URL}${a}.git
done

[ $DO_CHECK -eq 0 ] && echo "Found local copies for ALL repo ($REPO_CNT)."

exit 0
