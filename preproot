#!/bin/bash

ROOT_PATH=${ROOT_PATH:="/opt/chroot32"}
BIND_THIS="proc sys home dev"

[ $UID -ne 0 ] && echo "Must run as root!" && exit 1

if [ "$1" == "--init" ] ; then
	echo -n "Copying user/group info to '$ROOT_PATH'... "
	# copy user/group info files
	for that in passwd passwd- group group- shadow ; do
		that="/etc/$that"
		cp $that $ROOT_PATH/$that
	done
	echo "done."
	exit 0
fi

# prepare this here... one-off!
SSHD_CONF="/etc/ssh/sshd_config"
[ ! -f "$SSHD_CONF" ]
SSHD_TEST=`cat $SSHD_CONF | grep $ROOT_PATH`
if [ "$SSHD_TEST" = "" ]; then
	SSHD_WHAT=`cat <<SSHD_LINES
# local ssh means chroot?
Match Address 127.0.0.1
	ChrootDirectory $ROOT_PATH
	X11Forwarding yes
SSHD_LINES`
	echo "Appending following text to $SSHD_CONF:"
	echo -ne "\n$SSHD_WHAT\n\n"
	echo -ne "\n$SSHD_WHAT\n\n" >> $SSHD_CONF
fi

# check if sshd is running... if it is not, run it!
SSHD_TEST=`ps -ef | grep sshd | grep -v grep`
if [ "$SSHD_TEST" = "" ] ; then
	echo -n "Running ssh daemon... "
	sh /etc/rc.d/rc.sshd start
	echo "done."
fi

# mount stuffs
for path in ${BIND_THIS} ; do
	target=${ROOT_PATH}/$path
	[ ! -d "$target" ] && echo "Cannot find $target! Ignored!" && continue
	[ ! -d "/$path" ] && echo "Cannot find /$path! Ignored!" && continue
	dotest=`mount | grep $target`
	if [ "$1" == "--release" ] ; then
		[ "$dotest" == "" ] && continue
		if [ "$path" = "dev" ] ; then
			# unbind ${ROOT_PATH}/dev 'recursively'
			checks=`cat /proc/mounts|awk '{print $2}'|grep ${target}/|sort -r`
			for rmnt in $checks ; do
				echo "Release rbinded $rmnt"
				umount -n $rmnt
			done
		fi
		echo "Release bind to /$path at $target"
		umount $target
	else
		[ "$dotest" != "" ] && continue
		dobind="bind"
		[ "$path" = "dev" ] && dobind="rbind"
		echo "Create $dobind to /$path at $target"
		mount --$dobind /$path $target
	fi
done

# special case files
BIND_FILE="/etc/resolv.conf"
BIND_FILE="${BIND_FILE} /var/lib/dbus/machine-id"
for that in ${BIND_FILE} ; do
	[ ! -f "$that" ] &&
		echo "Cannot find $that! Ignored!" && continue
	BIND_THAT=${ROOT_PATH}${that}
	BIND_PATH=`dirname ${BIND_THAT}`
	[ ! -d "$BIND_PATH" ] &&
		echo "Invalid path $BIND_PATH! Ignored!" && continue
	if [ "$1" == "--release" ] ; then
		dotest=`mount | grep $BIND_THAT`
		[ "$dotest" == "" ] && continue
		echo "Release bind to $that at $BIND_THAT"
		umount ${BIND_THAT}
	else
		[ ! -f "$BIND_THAT" ] && touch ${BIND_THAT}
		echo "Create bind to $that at $BIND_THAT"
		mount --bind ${that} ${BIND_THAT}
	fi
done

exit 0
