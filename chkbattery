#!/bin/bash

# chkbattery
# - written by azman@my1matrix.org
# - simple script to check battery from /sys/class (/proc/acpi deprecated?)

INFO_PATH="/sys/class/power_supply"
BATT_MISS="YES"
BATT_PATH=""
BATT_NAME=""

if [ -d ${INFO_PATH} ] ; then
	BATT_PATH=`find ${INFO_PATH} -maxdepth 1 -name "BAT*"`
	# filter in case multiple battery?
	BATT_PATH=`echo ${BATT_PATH} | sed 's/\([^\s]*\)\s.*/\1/'`
	# check if really BAT entry? must have present?
	TEST_BATT=0
	[ -f "${BATT_PATH}/present" ] && TEST_BATT=`cat ${BATT_PATH}/present`
	if [ $TEST_BATT -ne 0 ] ; then
		BATT_MISS="NO"
		BATT_NAME=`echo ${BATT_PATH} | sed 's/.*\/\([^\/]*\)/\1/'`
	fi
fi

if [ "$BATT_MISS" == "NO" ] ; then
	((FULL_BATT=`cat ${BATT_PATH}/charge_full_design`/1000))
	((PREV_BATT=`cat ${BATT_PATH}/charge_full`/1000))
	((CURR_BATT=`cat ${BATT_PATH}/charge_now`/1000))
	((VOLT_CURR=`cat ${BATT_PATH}/voltage_now`/1000))
	((VOLT_DMIN=`cat ${BATT_PATH}/voltage_min_design`/1000))
	((VOLT_TEMP=${VOLT_CURR}-${VOLT_DMIN}))
	((VOLT_TEMP=${VOLT_TEMP}*100/${VOLT_DMIN}))
	((VOLT_TEMP=${VOLT_TEMP}+100))
	CURR_PCTG=`cat ${BATT_PATH}/capacity`
	_CHARGING=`cat ${BATT_PATH}/status`
	RATE_TEST=`cat ${BATT_PATH}/current_now 2>/dev/null`
	RATE_BATT=0
	[ "$RATE_TEST" != "" ] && ((RATE_BATT=${RATE_TEST}/1000))
	TIME2DONE="??M"
	# calculate time to finish if rate available
	if [ $RATE_BATT -ne 0 ] ; then
		DONE_BATT=${CURR_BATT} # assume discharging
		[ "$_CHARGING" == "Charging" ] &&
			((DONE_BATT=${FULL_BATT}-${CURR_BATT}))
		((TIME1PART=${DONE_BATT}/${RATE_BATT}))
		if [ $TIME1PART -ne 0 ] ; then
			((TIME2PART=${DONE_BATT}-${TIME1PART}*${RATE_BATT}))
			TIME2DONE="${TIME1PART}H"
		else
			TIME2PART=${DONE_BATT}
			TIME2DONE=""
		fi
		((TIME2PART=${TIME2PART}*60/${RATE_BATT}))
		TIME2DONE="${TIME2DONE}${TIME2PART}M"
	fi
	# output formatting
	if [ "$_CHARGING" == "Discharging" ] ; then
		CHK_STATE="$CURR_PCTG%-- ($TIME2DONE)"
		_CHARGING="$_CHARGING:${TIME2DONE}"
	elif [ "$_CHARGING" == "Charging" ] ; then
		CHK_STATE="$CURR_PCTG%++ ($TIME2DONE)"
		_CHARGING="$_CHARGING:${TIME2DONE}"
	elif [ "$_CHARGING" == "Full" ] ; then
		CHK_STATE="$CURR_PCTG%##"
	else
		CHK_STATE="$CURR_PCTG%??"
	fi
	SUM_VBATT="VBAT=${VOLT_TEMP}%"
	ALL_VBATT="$SUM_VBATT {${VOLT_CURR}mV/${VOLT_DMIN}mV}"
	CHK_VBATT="$VOLT_TEMP"
else
	CURR_BATT="0"
	FULL_BATT="0"
	PREV_BATT="0"
	RATE_BATT="0"
	CURR_PCTG="100"
	_CHARGING="No battery!"
	CHK_STATE="AC"
	ALL_VBATT="AC"
	CHK_VBATT="100"
fi

MAIN_INFO="$CURR_PCTG% <$_CHARGING>"
CHK_BASIC="$MAIN_INFO"
[ ! -z "$SUM_VBATT" ] && CHK_BASIC="$CHK_BASIC $SUM_VBATT"
CHK_BASIC="$CHK_BASIC [${BATT_NAME}]"
RATE_INFO="RATE=$RATE_BATT {$CURR_BATT/$FULL_BATT@$PREV_BATT}"
BATT_FULL="$MAIN_INFO $RATE_INFO"
[ ! -z "$ALL_VBATT" ] && BATT_FULL="$BATT_FULL $ALL_VBATT"
BATT_FULL="$BATT_FULL [${BATT_NAME}]"

# since xfce4 power manager CANNOT set critical level above 20%
# - here, i use battery voltage level though!
# - used with genmon plugin
do_hibernate()
{
	local curr=$1
	local test=$2
	[ -z "$curr" -o -z "$test" ] && return
	[ $curr -lt $test ] && xfce4-session-logout --hibernate
}

case "$1" in
	--basic) echo "$CHK_BASIC" ;;
	--state) echo "$CHK_STATE" ;;
	--vbatt) echo "${CHK_VBATT}%" ; do_hibernate $CHK_VBATT $2 ;;
	*) echo "$BATT_FULL" ;;
esac

exit 0
