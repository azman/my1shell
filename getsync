#!/bin/bash

# getsync
# - written by azman@my1matrix.net
# - a getslack-like script to sync personal documents ('wrapper' for rsync)

MY1TOOL="$(basename $0 .sh)"
MY1PATH="$(dirname $0)"
CURPATH="$(pwd)"
CFGFILE="$CURPATH/.$MY1TOOL"

# look for config file
[ -f "$CFGFILE" ] && source $CFGFILE

# tool & env setup
RSYNC=${RSYNC:="$(which rsync 2>/dev/null)"}
RSYNCURL=${RSYNCURL:="user@server:/path/to/home/"}
RSYNCOPT=${RSYNCOPT:="-e ssh -rpltD --partial --progress --dry-run --update"}
LOCALURL=${LOCALURL:="."}

# make sure rsync is available!
[ "$RSYNC" == "" ] && echo "Cannot find rsync!" && exit 1

# first parameter CAN be a path to server URL
[ -d "$1" ] && RSYNCURL="$(cd $1;pwd)/" && LOCALURL="." &&
	INCLUDES="$INCLUDES --include=/" && shift

# enforce this!
[ "$RSYNCURL" == "" ] && echo "Server URL not specified!" && exit 1

# check target & source
RSYNCSRC="${RSYNCURL}"
RSYNCTGT="${LOCALURL}"

# customized sync list
EXCLUDES=${EXCLUDES:=""}
INCLUDES=${INCLUDES:=""}
[ -r "$EXCLUDEFILE" ] && EXCLUDES="--exclude-from=$EXCLUDEFILE"
[ -r "$INCLUDEFILE" ] && INCLUDES="--include-from=$INCLUDEFILE"

# check parameters
while  [ "$1" != "" ]; do
	case $1 in
		--upload)
			RSYNCTMP="${RSYNCSRC}"
			RSYNCSRC="${RSYNCTGT}"
			RSYNCTGT="${RSYNCTMP}"
			;;
		--reload)
			RSYNCOPT="${RSYNCOPT} --delete-excluded"
			;;
		--delete|--update)
			RSYNCOPT="${RSYNCOPT} $1"
			;;
		--dolink)
			RSYNCOPT="${RSYNCOPT} --copy-links --keep-dirlinks"
			;;
		--exec)
			RSYNCOPT="${RSYNCOPT// --dry-run/}"
			;;
		--exclude*)
			EXCLUDES="$EXCLUDES $1"
			;;
		--include*)
			INCLUDES="$INCLUDES $1"
			;;
		*)
			echo "Unknown parameter '$1'"
			exit 1
			;;
	esac
	shift
done

# start actual mirroring process
echo "*** From ${RSYNCSRC} To ${RSYNCTGT} ***"
$RSYNC ${RSYNCOPT} ${INCLUDES} ${EXCLUDES} ${RSYNCSRC} ${RSYNCTGT}
echo "$(date) [$$]: Done mirroring (exit code $?)."

exit 0
